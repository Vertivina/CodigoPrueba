// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models.MvcContext;

namespace pangu.Migrations
{
    [DbContext(typeof(MvcContext))]
    [Migration("20181108173315_Migracion2")]
    partial class Migracion2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("vertivina.Models.Cita", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Direccion");

                    b.Property<string>("Doctor");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Hora");

                    b.Property<string>("Mascota")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("Telefono");

                    b.Property<string>("TipoCita");

                    b.Property<string>("TipoMascota");

                    b.Property<string>("TipoTelefono")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Cita");
                });

            modelBuilder.Entity("vertivina.Models.Comunidad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.HasKey("ID");

                    b.ToTable("Comunidad");
                });

            modelBuilder.Entity("vertivina.Models.Contacto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido")
                        .IsRequired();

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Mensaje")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("Telefono");

                    b.HasKey("ID");

                    b.ToTable("Contacto");
                });

            modelBuilder.Entity("vertivina.Models.Faq", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("contactoNombre")
                        .IsRequired();

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<DateTime>("fechaInc");

                    b.Property<string>("motivos")
                        .IsRequired();

                    b.Property<string>("msj");

                    b.Property<string>("nombrePersonal")
                        .IsRequired();

                    b.Property<string>("respuesta")
                        .IsRequired();

                    b.Property<string>("solicito")
                        .IsRequired();

                    b.Property<int>("tlf");

                    b.HasKey("ID");

                    b.ToTable("Faq");
                });

            modelBuilder.Entity("vertivina.Models.Mascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("imagen");

                    b.Property<string>("nombre")
                        .IsRequired();

                    b.Property<string>("tipoMascota")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Mascota");
                });

            modelBuilder.Entity("vertivina.Models.Producto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre");

                    b.Property<double>("Precio");

                    b.Property<int>("Stock");

                    b.Property<string>("TipoProd");

                    b.HasKey("ID");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("vertivina.Models.Producto2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Cantidad");

                    b.Property<string>("Desc");

                    b.Property<DateTime?>("Fecven");

                    b.Property<string>("Imagen");

                    b.Property<string>("Nombre");

                    b.Property<double>("Precio");

                    b.Property<string>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Producto2");

                    b.HasData(
                        new { Id = 1, Cantidad = 15, Desc = "Articulo para tu cachorro", Imagen = "https://static2.lucasylola.es/5905-large_default/correa-para-perro-flexi-new-comfort-de-cordon.jpg", Nombre = "Producto 1", Precio = 150.0, Tipo = "Correa" },
                        new { Id = 2, Cantidad = 15, Desc = "Articulo para tu cachorro", Nombre = "Producto 2", Precio = 150.0, Tipo = "Correa" },
                        new { Id = 3, Cantidad = 15, Desc = "Articulo para tu cachorro", Nombre = "Producto 3", Precio = 150.0, Tipo = "Correa" }
                    );
                });

            modelBuilder.Entity("vertivina.Models.Registrar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<string>("names")
                        .IsRequired();

                    b.Property<string>("pass")
                        .IsRequired();

                    b.Property<string>("pass2")
                        .IsRequired();

                    b.Property<string>("user");

                    b.HasKey("ID");

                    b.ToTable("Registrar");
                });

            modelBuilder.Entity("vertivina.Models.Servicio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Celular");

                    b.Property<string>("Email");

                    b.Property<string>("Imagen");

                    b.Property<string>("Mensaje");

                    b.Property<string>("Nombre");

                    b.Property<double>("Precio");

                    b.HasKey("ID");

                    b.ToTable("Servicio");
                });
#pragma warning restore 612, 618
        }
    }
}
